/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, DeliveryPerson as PrismaDeliveryPerson } from "@prisma/client";

export class DeliveryPersonServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.DeliveryPersonCountArgs, "select">
  ): Promise<number> {
    return this.prisma.deliveryPerson.count(args);
  }

  async deliveryPeople<T extends Prisma.DeliveryPersonFindManyArgs>(
    args: Prisma.SelectSubset<T, Prisma.DeliveryPersonFindManyArgs>
  ): Promise<PrismaDeliveryPerson[]> {
    return this.prisma.deliveryPerson.findMany<Prisma.DeliveryPersonFindManyArgs>(
      args
    );
  }
  async deliveryPerson<T extends Prisma.DeliveryPersonFindUniqueArgs>(
    args: Prisma.SelectSubset<T, Prisma.DeliveryPersonFindUniqueArgs>
  ): Promise<PrismaDeliveryPerson | null> {
    return this.prisma.deliveryPerson.findUnique(args);
  }
  async createDeliveryPerson<T extends Prisma.DeliveryPersonCreateArgs>(
    args: Prisma.SelectSubset<T, Prisma.DeliveryPersonCreateArgs>
  ): Promise<PrismaDeliveryPerson> {
    return this.prisma.deliveryPerson.create<T>(args);
  }
  async updateDeliveryPerson<T extends Prisma.DeliveryPersonUpdateArgs>(
    args: Prisma.SelectSubset<T, Prisma.DeliveryPersonUpdateArgs>
  ): Promise<PrismaDeliveryPerson> {
    return this.prisma.deliveryPerson.update<T>(args);
  }
  async deleteDeliveryPerson<T extends Prisma.DeliveryPersonDeleteArgs>(
    args: Prisma.SelectSubset<T, Prisma.DeliveryPersonDeleteArgs>
  ): Promise<PrismaDeliveryPerson> {
    return this.prisma.deliveryPerson.delete(args);
  }
}
